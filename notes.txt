#!/Users/ralpizar/devel/dnstable/venv/bin/python


from dnsknife.resolver import Resolver


with Resolver(timeout=10) as r:
    a = r.query('www.nike.com', 'A')
    b = r.query('www.akamai.com', 'A')

#print a.get().find_rrset()
print b.get().response.rcode
#print b.get().response.rcode()

# for i in b.get():
#     print i
    # for j in i.items:
    #     print j.to_text()
#print b.get().response
# http://www.dnspython.org/docs/1.15.0/dns.resolver-pysrc.html
# http://www.dnspython.org/docs/1.15.0/dns.message-pysrc.html#Message.find_rrset
# https://github.com/rthalley/dnspython/blob/master/dns/message.py

'''

import dns

>>> a.get().response.answer
[<DNS www.ford.com. IN CNAME RRset>, <DNS www.ford.com.edgekey.net. IN CNAME RRset>, <DNS e4213.x.akamaiedge.net. IN A RRset>]
>>> 
>>> type(a.get().response.answer)
<type 'list'>

resp = a.get().response

if resp.edns >= 0: 
    print(u'edns %s\n' % resp.edns) 
    if resp.ednsflags != 0: 
         print(u'eflags %s\n' % dns.flags.edns_to_text(resp.ednsflags)) 
         print(u'payload %d\n' % resp.payload) 


#opcode
>>> dns.opcode.to_text(dns.opcode.from_flags(resp.flags))
'QUERY'

#flags
fl = dns.rcode.from_flags(resp.flags, resp.ednsflags) 
>>> print dns.rcode.to_text(fl)
NOERROR
>>> print dns.flags.to_text(resp.flags)
QR RD RA

# Response split
primero = a.get().response.answer[1]
>>> print primero
www.ford.com.edgekey.net. 21600 IN CNAME e4213.x.akamaiedge.net.
>>> primero.name.to_text(omit_final_dot=True)
'www.ford.com.edgekey.net'
>>> print primero.ttl
21600
>>> print dns.rdataclass.to_text(primero.rdclass)
IN
>>> dns.rdatatype.to_text(primero.rdtype)
'CNAME'
>>> print primero[0]
e4213.x.akamaiedge.net.



SBG (Small Business Group - QBO etc): Billable

'''
